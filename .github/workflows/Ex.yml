name: Extract U-Boot

on:
  workflow_dispatch:

jobs:
  process-archive:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: main  # Или ваша целевая ветка
        fetch-depth: 0

    - name: Download Archive
      run: |
        curl -L -o gpl-code.tar.gz "https://static.tp-link.com/upload/gpl-code/2023/202310/20231007/GPL_BE805.tar.gz?_gl=1*1d14vot*_gcl_au*MTU1ODc2MDE2NS4xNzQyNjgzNDcz*_ga*MTkxOTkxNjY4OS4xNzI2NTQ1MjI2*_ga_X5XJFE5K24*MTc0Mjk3NjUwMS4yLjEuMTc0Mjk3NjUzNi4wLjAuMA.."

    - name: Extract and Find U-Boot
      run: |
        # Распаковка с сохранением структуры
        mkdir -p temp_extract
        tar -xzf gpl-code.tar.gz -C temp_extract

        # Поиск папки uboot (регистрозависимо)
        echo "Поиск папки uboot в архиве..."
        UBOOT_PATH=$(find temp_extract -type d -name "uboot" | head -n 1)

        if [ -z "$UBOOT_PATH" ]; then
          echo "::error::Папка 'uboot' не найдена в архиве!"
          exit 1
        fi

        echo "Найдена папка: $UBOOT_PATH"
        
        # Создаем целевую директорию
        mkdir -p uboot
        
        # Копируем с сохранением прав
        cp -r "$UBOOT_PATH"/* uboot/
        
        # Проверка содержимого
        echo "Скопировано файлов: $(find uboot -type f | wc -l)"
        
        # Очистка
        rm -rf temp_extract gpl-code.tar.gz

    - name: Commit and Push
      run: |
        git config user.name "uboot-updater"
        git config user.email "actions@github.com"
        
        # Обновляемся перед коммитом
        git pull origin main --rebase
        
        # Добавляем только папку uboot
        git add uboot/
        
        # Проверяем изменения
        if git diff-index --quiet HEAD --; then
          echo "Нет изменений для коммита"
          exit 0
        fi

        git commit -m "Обновление U-Boot от $(date +'%Y-%m-%d')"
        git push origin main
